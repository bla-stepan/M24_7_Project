27.8. Проект

Создание и заполнение нового файла Excel с помощью Apache POI, работа со стилями таблицы, сбор статистики с
использованием Java Stream API, применение BigDecimal для преобразования чисел, использование Optional-типов
Этот урок поможет нам разобраться с тем, как мы можем вернуть обработанную информацию обратно в Excel.
Мы продолжим знакомство с библиотекой Apache POI, научимся создавать новые документы, вносить в них данные
и форматировать ячейки.

В рамках всего проекта мы добавим возможность вернуть обработанную информацию людям в том же самом формате, удобном
для них. Например, бухгалтеры и юристы смогут привычно воспользоваться Excel для чтения результатов обработки.

➡ В ходе работы потребуется:
Apache POI;
Java Stream API;
Java Collections;
Optional (Java 8);
BigDecimal;
создание файла из потока.

⭐ В этом уроке необходимо выполнить следующее:
    1. Создать ещё один модельный класс Statistics (с конструктором, геттерами и сеттерами), в котором должны быть, как
минимум, следующие поля:
    профиль обучения,
    средний балл за экзамен,
    количество студентов по профилю,
    количество университетов по профилю,
    названия университетов.(+)

    2. Создать класс XlsWriter, в котором реализовать метод генерации таблицы и её записи в файл. Метод получает на вход
коллекцию объектов статистики и путь к файлу.(+)

    3. В методе генерации нужно реализовать с помощью Apache POI создание нового Workbook, добавить на него новую страницу.
В странице заполнить заголовок с текстовыми наименованиями (то есть подписать колонки таблицы). Заголовки должны иметь
настроенный стиль — как минимум, сделать всё жирным шрифтом и с указанным размером шрифта.(+)

    4. Также в этом методе реализовать заполнение строк таблицы данными, хранящимися в коллекции элементов Statistics.(+)

    5. После генерации в этом же методе файл необходимо создать (используя FileOutputStream), задав ему полученное на вход
метода имя.(+)

    6. Создать утилитный класс для обработки коллекций студентов и университетов.

    7. В утилитном классе необходимо реализовать метод, получающий на вход коллекции студентов и университетов, возвращающий
коллекцию элементов класса Statistics.

    8. С помощью Java Stream API собрать статистику. Необходимо для каждого профиля обучения, по которому есть хотя бы один
университет, создать экземпляр класса Statistics. Заполнить все его поля.(+)

    9. При сборе статистики нужно учесть, что каких-то данных может не быть в исходной таблице. Например, в подготовленном
ранее файле не по всем университетам есть студенты, соответственно, средняя оценка по некоторым профилям может
отсутствовать. Для этого можно использовать Optional-типы, например Optional<Double> или OptionalDouble.

    10. Также нужно учесть, что средняя оценка при подсчёте может иметь длинную дробную часть. Для решения этой проблемы
рекомендуется использовать класс BigDecimal с его возможностями по округлению. Округление производить математически.

    11. Вызвать в методе main обработку статистики, получить коллекцию с элементами статистики, передать коллекцию в метод
генерации XLSX-файла.
=====================================================================================================================
    Немного об округлении с помощью класса BigDecimal
    Класс BigDecimal — это представление чисел и их обработка. В его конструктор можно подать на вход, например, экземпляр
класса Double или примитив double.
    Этот класс содержит метод setScale(), который принимает на вход количество знаков после запятой и необходимый тип
округления. Тип округления обозначается статическим членом класса RoundingMode. Этот класс содержит несколько заранее
подготовленных вариантов округления, в том числе математически, в большую сторону, в меньшую сторону и так далее.
    Также BigDecimal позволяет преобразовать своё значение обратно в несколько разных вариантов, например в строку,
в целое число, в дробное число.

    Немного о создании новой таблицы Excel и стилях
    Аналогично тому, как ранее мы работали с чтением файла, можно реализовать и его создание. Вместо получения Workbook
из стрима достаточно использовать оператор new с пустым конструктором книги. Затем для этой книги можно вызвать метод
createSheet и задать название листа.
    Аналогично для листа имеется метод createRow(), для строки — метод createCell().
    Для книги можно создать набор стилей и шрифтов. Шрифт создаётся методом createFont(), экземпляр этого класса
заполняется желаемыми значениями. Далее создаётся стиль методом createCellStyle(), которому можно задать созданный шрифт.
    Для использования стиля используется метод setCellStyle(), вызываемый у ячейки.
    Чтобы создать файл по сгенерированной книге, нужно вызвать у книги метод write() и передать ему поток FileOutputStream.